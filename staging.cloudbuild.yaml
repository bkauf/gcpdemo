steps:
- id: 'Create Container'
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '--tag=gcr.io/$_CLUSTER_PROJECT/gcpdemo:$SHORT_SHA', '.']

- id: 'Push Container to Staging registry'
  name: 'gcr.io/cloud-builders/docker'
  args: ["push", "gcr.io/$_CLUSTER_PROJECT//gcpdemo:$SHORT_SHA"]


- id: 'Deploy and get Manifest'
  name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  args:
  - '-c' # pass what follows as a command to bash
  - |
    gcloud container clusters get-credentials --zone=$_CLUSTER_ZONE --project=$_CLUSTER_PROJECT $_CLUSTER_NAME
    kubectl set image deployment/frontend server=gcr.io/$_IMAGE_REPO/frontend:$SHORT_SHA
    kubectl get deployment -o yaml > $_CLUSTER_NAME-deployments.yaml
# Prepare for github to store k8s config
#
# id: 'Copy Git SSH Auth Key into Source Folder'
#  name: gcr.io/cloud-builders/gsutil
#  args: ['cp', 'gs://$PROJECT_ID-github/github_rsa', '/workspace/id_rsa']
#^not good!

#- id: 'Connect, Git Clone, Git Commit'
#  name: 'gcr.io/cloud-builders/git'
#  entrypoint: 'bash'
#  args:
#  - '-c' # pass what follows as a command to bash
#  - |
#    chmod 600 /workspace/id_rsa
#    ssh-keyscan github.com > /root/.ssh/known_hosts
#    git clone https://github.com/bkauf/$_CONFIG_REPO.git
#    cat $_CLUSTER_NAME-deployments.yaml  > $_CONFIG_REPO/$_ENV/$_CLUSTER_NAME-deployments.yaml
#    cd $_CONFIG_REPO
#    git config --global user.email cloudbuild@cicdnotary.com
#    git commit -am 'Cloud Build Update Manifest $SHORT_SHA'
#  volumes:
#  - name: 'ssh-setup'
#    path: /root/.ssh
#
#
#- id: 'GitHub Push'
#  name: 'gcr.io/cloud-builders/git'
#  dir: $_CONFIG_REPO
#  env:
#  - GIT_SSH=/workspace/src/git-ssh.sh
#  args:
#  - push
#  - git@github.com:bkauf/$_CONFIG_REPO
#  - master
#  volumes:
#  - name: 'ssh-setup'
#    path: /root/.ssh

steps:


- id: 'Rebuild Node Files'
  name: 'gcr.io/cloud-builders/npm'
  args: ['rebuild']

- id: 'Deploy to App Engine'
  name: 'gcr.io/cloud-builders/gcloud'
  args: ['app', 'deploy', 'prod.app.yaml','--version=$COMMIT_SHA','--quiet']
  waitFor: ['Rebuild Node Files']

- id: 'Create Container'
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '--tag=gcr.io/$_IMAGE_REPO/gcpdemo:$BUILD_ID', '.']
  waitFor: ['Rebuild Node Files']

- id: 'Push to Registry'
  name: 'gcr.io/cloud-builders/docker'
  args: ["push", "gcr.io/$_IMAGE_REPO/gcpdemo:$BUILD_ID"]
  waitFor: ['Create Container']

# This step deploys the new version of our container image
# to the specified  Kubernetes Engine cluster.
- id: 'Deploy to K8s'
  name: 'gcr.io/cloud-builders/kubectl'
  waitFor: ['Push to Registry']
  args:
  - 'set'
  - 'image'
  - 'deployment/frontend-production'
  - 'webserver=gcr.io/$_IMAGE_REPO/gcpdemo:$BUILD_ID'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=$_CLOUDSDK_COMPUTE_ZONE'
  - 'CLOUDSDK_CONTAINER_CLUSTER=$_CLOUDSDK_CONTAINER_CLUSTER'

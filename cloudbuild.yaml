steps:
- id: 'Rebuild Node Files'
  name: 'gcr.io/cloud-builders/npm'
  entrypoint: 'bash'
  args:
  - '-c' # pass what follows as a command to bash
  - |
    echo 'New Commit":"$COMMIT_SHA"'
    echo '{ "commitID":"$COMMIT_SHA", "buildID":"$BUILD_ID"}' > buildDetails
  
- id: 'Create Container'
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/gcpdemo:$BUILD_ID', '.']
  waitFor: ['Rebuild Node Files']

- id: 'Push to GCR Container Registry'
  name: 'gcr.io/cloud-builders/docker'
  args: ["push", "gcr.io/$PROJECT_ID/gcpdemo:$BUILD_ID"]
  waitFor: ['Create Container']
  
# Update Manifest in Anthos Config Management Directory 
- id: 'Update Manifest'
  name: 'gcr.io/anthos-tech-summit/gitops:1.0'
  waitFor: ['Push to GCR Container Registry']
  entrypoint: 'bash'
  secretEnv: ['PASSWORD']
  args:
  - '-c' # pass what follows as a command to bash
  - |
    cd k8s/overlays/production
    kustomize edit set image bkauf/gcpdemo=gcr.io/$PROJECT_ID/gcpdemo:$BUILD_ID
    git clone https://github.com/bkauf/csp-config-management.git
    kustomize build > csp-config-management/tech-summit/namespaces/google/deployment.yaml
    cd csp-config-management/
    git config --global user.email "$_GIT_EMAIL"
    git config --global user.name "$_GIT_USER"
    git commit -am "manifest change $BUILD_ID"
    git push https://$_GIT_USER:$$PASSWORD@github.com/$_GIT_USER/csp-config-management.git
availableSecrets:
  secretManager:
  - versionName: projects/1046932852410/secrets/gh-password/versions/1
    env: 'PASSWORD'
 


 
  # To do
  #1. set new image in kustomize
  #2 push new yaml to tech-summit repo
  #args:
  #- 'set'
  #- 'image'
  #- 'deployment/frontend-production'
  #- 'webserver=gcr.io/$_IMAGE_REPO/gcpdemo:$BUILD_ID'
  #env:
  #- 'CLOUDSDK_COMPUTE_ZONE=$_CLOUDSDK_COMPUTE_ZONE'
  #- 'CLOUDSDK_CONTAINER_CLUSTER=$_CLOUDSDK_CONTAINER_CLUSTER'
  
  
#- id: 'Dora Metrics'
#  name: 'gcr.io/bkauf-cloud-build/leadtime:2.0'
  #waitFor: ['Deploy to GKE']
#  args:
#  - 'bkauf/gcpdemo'
#  - $COMMIT_SHA
#  - $_MERGE_TIME
#  waitFor: ['Deploy to GKE']
  #waitFor: ['Deploy to Cloud Run on Anthos','Deploy to GKE', 'Deploy to Hosted Cloud Run']



  #Deploy to GCP Hosted Cloud Build
#- id: 'Deploy to Hosted Cloud Run'
#  name: 'gcr.io/cloud-builders/gcloud'
#  args: ['run', 'deploy', 'ghosted-gcpdemo', '--platform', 'managed','--region', 'us-central1', '--image', 'gcr.io/$_IMAGE_REPO/gcpdemo:$BUILD_ID']
#  waitFor: ['Push to GCR Container Registry']
    
  #Deploy to Anthos Hosted Cloud Build
#- id: 'Deploy to Cloud Run on Anthos'
#  name: 'gcr.io/cloud-builders/gcloud'
#  args: ['run', 'deploy', 'gcpdemo', '--platform', 'gke','--cluster', 'cloudrun-default-cluster', '--cluster-location', 'us-central1-a', '--image', 'gcr.io/$_IMAGE_REPO/gcpdemo:$BUILD_ID']
#  waitFor: ['Push to GCR Container Registry']



# Push container to AWS EKS
#- name: 'gcr.io/bkauf-cloud-build/panick-aws-tools'
#  id: 'Deploy to EKS'
#  waitFor: ['Push to GCR Container Registry']
#  entrypoint: 'sh'
#  args:
#  - -xe
#  - -c
#  - |
#     echo "Configuring AWS credentials and configs..."
#     export AWS_DEFAULT_REGION=us-west-2
#     echo "Test file upload to S3"
#     touch file-to-upload.txt
#     aws s3 cp file-to-upload.txt s3://nickpan-s3-bucket/file-to-upload.txt
#     echo "Configuring kubectl to point to EKS cluster"
#     aws eks update-kubeconfig --name eksworkshop-eksctl # this updates kubeconfig to pull iam tokens using aws-cli
#     kubectl set image deployment/frontend-production webserver=gcr.io/$_IMAGE_REPO/gcpdemo:$BUILD_ID
#     echo "Deployment to EKS complete!"
#  secretEnv: ['AWS_SECRET_KEY']


#secrets:
#- kmsKeyName: projects/bkauf-cloud-build/locations/global/keyRings/multi-cloud-demo-keyring/cryptoKeys/primary-key
#  secretEnv:
#    SECRET_KEY: 'C'
#options:
# machineType: 'N1_HIGHCPU_8'
# diskSizeGb: 200


steps:
- id: 'Rebuild Node Files'
  name: 'gcr.io/cloud-builders/npm'
  entrypoint: 'bash'
  args:
  - '-c' # pass what follows as a command to bash
  - |
    echo 'New Commit":"$COMMIT_SHA"'
    echo '{ "commitID":"$COMMIT_SHA", "buildID":"$BUILD_ID"}' > buildDetails
    npm install

- id: 'Create Container'
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '--tag=gcr.io/$_IMAGE_REPO/gcpdemo:$BUILD_ID', '.']
  waitFor: ['Rebuild Node Files']

- id: 'Push to GCR Container Registry'
  name: 'gcr.io/cloud-builders/docker'
  args: ["push", "gcr.io/$_IMAGE_REPO/gcpdemo:$BUILD_ID"]
  waitFor: ['Create Container']

# Push container to Google GKE
- id: 'Deploy to GKE'
  name: 'gcr.io/cloud-builders/kubectl'
  waitFor: ['Push to GCR Container Registry']
  args:
  - 'set'
  - 'image'
  - 'deployment/frontend-production'
  - 'webserver=gcr.io/$_IMAGE_REPO/gcpdemo:$BUILD_ID'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=$_CLOUDSDK_COMPUTE_ZONE'
  - 'CLOUDSDK_CONTAINER_CLUSTER=$_CLOUDSDK_CONTAINER_CLUSTER'
  
  #Deploy to GCP Hosted Cloud Build
- id: 'Deploy to Hosted Cloud Run'
  name: 'gcr.io/cloud-builders/gcloud'
  args: ['run', 'deploy', 'ghosted-gcpdemo', '--platform', 'managed','--region', 'us-central1', '--image', 'gcr.io/$_IMAGE_REPO/gcpdemo:$BUILD_ID']
  waitFor: ['Push to GCR Container Registry']
  
    
  #Deploy to Anthos Hosted Cloud Build
- id: 'Deploy to Cloud Run on Anthos'
  name: 'gcr.io/cloud-builders/gcloud'
  args: ['run', 'deploy', 'gcpdemo', '--platform', 'gke','--cluster', 'cloudrun-default-cluster', '--cluster-location', 'us-central1-a', '--image', 'gcr.io/$_IMAGE_REPO/gcpdemo:$BUILD_ID']
  waitFor: ['Push to GCR Container Registry']

- id: 'Dora Metrics'
  name: 'gcr.io/bkauf-cloud-build/leadtime:1.0'
  waitFor: ['Deploy to GKE']
  args:
  - 'bkauf/gcpdemo'
  - $COMMIT_SHA
  waitFor: ['Deploy to Cloud Run on Anthos','Deploy to Hosted Cloud Run']

# Push container to AWS EKS
#- name: 'gcr.io/bkauf-cloud-build/panick-aws-tools'
#  id: 'Deploy to EKS'
#  waitFor: ['Push to GCR Container Registry']
#  entrypoint: 'sh'
#  args:
#  - -xe
#  - -c
#  - |
#     echo "Configuring AWS credentials and configs..."
#     export AWS_ACCESS_KEY_ID=AKIAY47XAHKDEGVY3BUP
#     export AWS_SECRET_ACCESS_KEY=$$AWS_SECRET_KEY
#     export AWS_DEFAULT_REGION=us-west-2
#     echo "Test file upload to S3"
#     touch file-to-upload.txt
#     aws s3 cp file-to-upload.txt s3://nickpan-s3-bucket/file-to-upload.txt
#     echo "Configuring kubectl to point to EKS cluster"
#     aws eks update-kubeconfig --name eksworkshop-eksctl # this updates kubeconfig to pull iam tokens using aws-cli
#     kubectl set image deployment/frontend-production webserver=gcr.io/$_IMAGE_REPO/gcpdemo:$BUILD_ID
#     echo "Deployment to EKS complete!"
#  secretEnv: ['AWS_SECRET_KEY']


#secrets:
#- kmsKeyName: projects/bkauf-cloud-build/locations/global/keyRings/multi-cloud-demo-keyring/cryptoKeys/primary-key
#  secretEnv:
#    AWS_SECRET_KEY: 'CiQApb8sr/+aL/7E6PZXsrz9mkCiLs12HBV3mez9bypm1v765vgSUQCNUYOTKQidaT62K5DLI86warbBSWcQXVGQeiqexEAzHTEFhxs5WB5gntolN9tdogNgFgh1VvXsAJ2/l3qJXz7H1CvX13Z13CwH+pBDxZgOYA=='
#options:
# machineType: 'N1_HIGHCPU_8'
# diskSizeGb: 200
